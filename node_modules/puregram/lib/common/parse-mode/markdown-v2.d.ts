/** Markdown V2 parse mode */
export declare class MarkdownV2 {
    static parseMode: 'MarkdownV2';
    get [Symbol.toStringTag](): string;
    /**
     * Since MarkdownV2 requires escaping a lot of chars you can use this static method for easier usage of MarkdownV2 via template strings
     *
     * @example
     * ```js
     * const message = MarkdownV2.build`
     *   foo! bar~ ${MarkdownV2.bold('baz')}
     * `
     * // NOTE: "foo! bar~" part will be automatically escaped!
     * ```
     */
    static build(template: TemplateStringsArray, ...args: any[]): string;
    /** @deprecated use `MarkdownV2.escape` instead */
    static raw(source: string): string;
    /** Escape all the danger characters */
    static escape(source: string): string;
    /** Bold text */
    static bold(source: string, escape?: boolean): string;
    /** Italic text */
    static italic(source: string, escape?: boolean): string;
    /** Underlined text */
    static underline(source: string, escape?: boolean): string;
    /** Strikethrough text */
    static strikethrough(source: string, escape?: boolean): string;
    /** Spoilered text */
    static spoiler(source: string, escape?: boolean): string;
    /** URL with text */
    static url(source: string, link: string, escape?: boolean): string;
    /** Mention the user */
    static mention(source: string, id: number | string, escape?: boolean): string;
    /** Preformatted code */
    static code(source: string, escape?: boolean): string;
    /** Preformatted code */
    static pre(source: string, language?: string, escape?: boolean): string;
}
