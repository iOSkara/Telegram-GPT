import * as Interfaces from '../../generated/telegram-interfaces';
import { AttachmentType, Require } from '../../types/types';
import { PhotoSize, MaskPosition, File } from '../structures';
import { FileAttachment } from './file-attachment';
/** This object represents a sticker. */
export declare class StickerAttachment extends FileAttachment<Interfaces.TelegramSticker> {
    attachmentType: AttachmentType;
    /**
     * Type of the sticker, currently one of `regular`, `mask`, `custom_emoji`.
     *
     * The type of the sticker is independent from its format, which is determined by the fields `is_animated` and `is_video`.
     */
    get type(): import("../../types/types").SoftString<Interfaces.TelegramStickerType>;
    /** Sticker width */
    get width(): number;
    /** Sticker height */
    get height(): number;
    /** `true`, if the sticker is animated */
    isAnimated(): boolean;
    /** `true`, if the sticker is a video sticker */
    isVideo(): boolean;
    /** Sticker thumbnail in the .WEBP or .JPG format */
    get thumbnail(): PhotoSize | undefined;
    /** Emoji associated with the sticker */
    get emoji(): string | undefined;
    /** Name of the sticker set to which the sticker belongs */
    get setName(): string | undefined;
    /** Is this sticker a premium one? */
    isPremium(): this is Require<this, 'premiumAnimation'>;
    /** Premium animation for the sticker, if the sticker is premium */
    get premiumAnimation(): File | undefined;
    /** For mask stickers, the position where the mask should be placed */
    get maskPosition(): MaskPosition | undefined;
    /** For custom emoji stickers, unique identifier of the custom emoji */
    get customEmojiId(): string | undefined;
    /** `true`, if the sticker must be repainted to a text color in messages, the color of the Telegram Premium badge in emoji status, white color on chat photos, or another appropriate color in other places */
    get needs_repainting(): true | undefined;
    /** File size */
    get fileSize(): number | undefined;
    toJSON(): Interfaces.TelegramSticker;
}
