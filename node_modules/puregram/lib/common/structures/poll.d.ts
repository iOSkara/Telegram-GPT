import * as Interfaces from '../../generated/telegram-interfaces';
import { Structure } from '../../types/interfaces';
import { MessageEntity } from './message-entity';
import { PollOption } from './poll-option';
/** This object contains information about a poll. */
export declare class Poll implements Structure {
    payload: Interfaces.TelegramPoll;
    constructor(payload: Interfaces.TelegramPoll);
    get [Symbol.toStringTag](): string;
    /** Unique poll identifier */
    get id(): string;
    /** Poll question, `1-300` characters */
    get question(): string;
    /** List of poll options */
    get options(): PollOption[];
    /** Total number of users that voted in the poll */
    get totalVoterCount(): number;
    /** `true`, if the poll is closed */
    isClosed(): boolean;
    /** `true`, if the poll is anonymous */
    isAnonymous(): boolean;
    /** Poll type, currently can be `regular` or `quiz` */
    get type(): import("../../types/types").SoftString<Interfaces.TelegramPollType>;
    /** `true`, if the poll allows multiple answers */
    get allowsMultipleAnswers(): boolean;
    /**
     * 0-based identifier of the correct answer option. Available only for polls
     * in the quiz mode, which are closed, or was sent (not forwarded) by the bot
     * or to the private chat with the bot.
     */
    get correctOptionId(): number | undefined;
    /**
     * Text that is shown when a user chooses an incorrect answer or taps on the
     * lamp icon in a quiz-style poll, 0-200 characters
     */
    get explanation(): string | undefined;
    /**
     * Special entities like usernames, URLs, bot commands, etc. that appear in
     * the explanation
     */
    get explanationEntities(): MessageEntity[] | undefined;
    /** Amount of time in seconds the poll will be active after creation */
    get openPeriod(): number | undefined;
    /**
     * Point in time (Unix timestamp) when the poll will be automatically closed
     */
    get closeDate(): number | undefined;
    toJSON(): Interfaces.TelegramPoll;
}
