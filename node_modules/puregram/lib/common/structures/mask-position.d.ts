import * as Interfaces from '../../generated/telegram-interfaces';
import { Structure } from '../../types/interfaces';
/**
 * This object describes the position on faces where a mask should be placed
 * by default.
 */
export declare class MaskPosition implements Structure {
    private payload;
    constructor(payload: Interfaces.TelegramMaskPosition);
    get [Symbol.toStringTag](): string;
    /**
     * The part of the face relative to which the mask should be placed.
     * One of `forehead`, `eyes`, `mouth`, or `chin`.
     */
    get point(): import("../../types/types").SoftString<Interfaces.TelegramMaskPositionPoint>;
    /**
     * Shift by X-axis measured in widths of the mask scaled to the face size,
     * from left to right. For example, choosing `-1.0` will place mask just to
     * the left of the default mask position.
     */
    get xShift(): number;
    /**
     * Shift by Y-axis measured in heights of the mask scaled to the face size,
     * from top to bottom. For example, `1.0` will place the mask just below the
     * default mask position.
     */
    get yShift(): number;
    /** Mask scaling coefficient. For example, `2.0` means double size. */
    get scale(): number;
    toJSON(): Interfaces.TelegramMaskPosition;
}
