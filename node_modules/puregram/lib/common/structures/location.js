"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Location = void 0;
const inspectable_1 = require("inspectable");
const helpers_1 = require("../../utils/helpers");
/** This object represents a point on the map. */
class Location {
    constructor(payload) {
        this.payload = payload;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /** Longitude as defined by sender */
    get longitude() {
        return this.payload.longitude;
    }
    /** Latitude as defined by sender */
    get latitude() {
        return this.payload.latitude;
    }
    /** The radius of uncertainty for the location, measured in meters; `0-1500` */
    get horizontalAccuracy() {
        return this.payload.horizontal_accuracy;
    }
    /**
     * Time relative to the message sending date,
     * during which the location can be updated, in seconds.
     * For active live locations only.
     */
    get livePeriod() {
        return this.payload.live_period;
    }
    /**
     * The direction in which user is moving, in degrees; `1-360`.
     * For active live locations only.
     */
    get heading() {
        return this.payload.heading;
    }
    /**
     * Maximum distance for proximity alerts about approaching another chat member, in meters.
     * For sent live locations only.
     */
    get proximityAlertRadius() {
        return this.payload.proximity_alert_radius;
    }
    toJSON() {
        return {
            longitude: this.longitude,
            latitude: this.latitude,
            horizontal_accuracy: this.horizontalAccuracy,
            live_period: this.livePeriod,
            heading: this.heading,
            proximity_alert_radius: this.proximityAlertRadius
        };
    }
}
exports.Location = Location;
(0, inspectable_1.inspectable)(Location, {
    serialize(struct) {
        return (0, helpers_1.filterPayload)({
            longitude: struct.longitude,
            latitude: struct.latitude,
            horizontalAccuracy: struct.horizontalAccuracy,
            livePeriod: struct.livePeriod,
            heading: struct.heading,
            proximityAlertRadius: struct.proximityAlertRadius
        });
    }
});
