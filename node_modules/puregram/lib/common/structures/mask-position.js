"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MaskPosition = void 0;
const inspectable_1 = require("inspectable");
/**
 * This object describes the position on faces where a mask should be placed
 * by default.
 */
class MaskPosition {
    constructor(payload) {
        this.payload = payload;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /**
     * The part of the face relative to which the mask should be placed.
     * One of `forehead`, `eyes`, `mouth`, or `chin`.
     */
    get point() {
        return this.payload.point;
    }
    /**
     * Shift by X-axis measured in widths of the mask scaled to the face size,
     * from left to right. For example, choosing `-1.0` will place mask just to
     * the left of the default mask position.
     */
    get xShift() {
        return this.payload.x_shift;
    }
    /**
     * Shift by Y-axis measured in heights of the mask scaled to the face size,
     * from top to bottom. For example, `1.0` will place the mask just below the
     * default mask position.
     */
    get yShift() {
        return this.payload.y_shift;
    }
    /** Mask scaling coefficient. For example, `2.0` means double size. */
    get scale() {
        return this.payload.scale;
    }
    toJSON() {
        return {
            point: this.point,
            x_shift: this.xShift,
            y_shift: this.yShift,
            scale: this.scale
        };
    }
}
exports.MaskPosition = MaskPosition;
(0, inspectable_1.inspectable)(MaskPosition, {
    serialize(struct) {
        return {
            point: struct.point,
            xShift: struct.xShift,
            yShift: struct.yShift,
            scale: struct.scale
        };
    }
});
