"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PassportData = void 0;
const inspectable_1 = require("inspectable");
const encrypted_passport_element_1 = require("./encrypted-passport-element");
const encrypted_credentials_1 = require("./encrypted-credentials");
/**
 * Contains information about Telegram Passport data shared with the bot by the
 * user.
 */
class PassportData {
    constructor(payload) {
        this.payload = payload;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    /**
     * Array with information about documents and other Telegram Passport
     * elements that was shared with the bot
     */
    get data() {
        const { data } = this.payload;
        if (!data) {
            return;
        }
        return data.map(element => new encrypted_passport_element_1.EncryptedPassportElement(element));
    }
    /** Encrypted credentials required to decrypt the data */
    get credentials() {
        return new encrypted_credentials_1.EncryptedCredentials(this.payload.credentials);
    }
    toJSON() {
        var _a, _b;
        return {
            data: (_b = (_a = this.data) === null || _a === void 0 ? void 0 : _a.map(e => e.toJSON())) !== null && _b !== void 0 ? _b : [],
            credentials: this.credentials
        };
    }
}
exports.PassportData = PassportData;
(0, inspectable_1.inspectable)(PassportData, {
    serialize(struct) {
        return {
            data: struct.data,
            credentials: struct.credentials
        };
    }
});
