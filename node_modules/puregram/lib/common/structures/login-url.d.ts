import * as Interfaces from '../../generated/telegram-interfaces';
import { Structure } from '../../types/interfaces';
/**
 * This object represents a parameter of the inline keyboard button used to
 * automatically authorize a user.
 */
export declare class LoginUrl implements Structure {
    private payload;
    constructor(payload: Interfaces.TelegramLoginUrl);
    get [Symbol.toStringTag](): string;
    /**
     * An HTTP URL to be opened with user authorization data added to the query
     * string when the button is pressed. If the user refuses to provid
     * authorization data, the original URL without information about the user
     * will be opened. The data added is the same as described in Receiving
     * authorization data.
     *
     * **NOTE**: You **must** always check the hash of the received data to
     * verify the authentication and the integrity of the data as described in
     * Checking authorization.
     */
    get url(): string;
    /** New text of the button in forwarded messages. */
    get forwardText(): string | undefined;
    /**
     * Username of a bot, which will be used for user authorization.
     * See Setting up a bot for more details. If not specified, the current
     * bot's username will be assumed. The url's domain must be the same as the
     * domain linked with the bot. See Linking your domain to the bot for more
     * details.
     */
    get botUsername(): string | undefined;
    /**
     * Pass `true` to request the permission for your bot to send messages to the
     * user.
     */
    get requestWriteAccess(): boolean | undefined;
    toJSON(): Interfaces.TelegramLoginUrl;
}
