import * as Interfaces from '../../generated/telegram-interfaces';
import { Structure } from '../../types/interfaces';
/** This object represents a Telegram user or bot. */
export declare class User implements Structure {
    private payload;
    constructor(payload: Interfaces.TelegramUser);
    get [Symbol.toStringTag](): string;
    /** Unique identifier for this user or bot */
    get id(): number;
    /** `true`, if this user is a bot */
    isBot(): boolean;
    /** User's or bot's first name */
    get firstName(): string;
    /** User's or bot's last name */
    get lastName(): string | undefined;
    /** User's or bot's username */
    get username(): string | undefined;
    /**
     * [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag)
     * of the user's language
     */
    get languageCode(): string | undefined;
    /** `true`, if this user is a Telegram Premium user */
    isPremium(): true | undefined;
    /** `true`, if this user added the bot to the attachment menu */
    get addedToAttachmentMenu(): true | undefined;
    /**
     * `true`, if the bot can be invited to groups.
     *
     * Returned only in `getMe`.
     */
    canJoinGroups(): boolean | undefined;
    /**
     * `true`, if privacy mode is disabled for the bot.
     *
     * Returned only in `getMe`.
     */
    canReadAllGroupMessages(): boolean | undefined;
    /**
     * `true`, if the bot supports inline queries.
     *
     * Returned only in `getMe`.
     */
    get supportsInlineQueries(): boolean | undefined;
    toJSON(): Interfaces.TelegramUser;
}
