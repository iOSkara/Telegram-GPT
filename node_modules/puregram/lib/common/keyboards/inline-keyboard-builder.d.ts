import * as Interfaces from '../../generated/telegram-interfaces';
interface TextButtonParams {
    text: string;
    payload: Record<string, any> | string;
}
interface UrlButtonParams {
    text: string;
    url: string;
    payload?: Record<string, any> | string;
}
interface WebAppButtonParams {
    text: string;
    url: string;
}
interface SwitchToCurrentChatButtonParams {
    text: string;
    query: string;
}
interface SwitchToChatButtonParams {
    text: string;
    query: string;
}
interface GameButtonParams {
    text: string;
    game: Interfaces.TelegramCallbackGame;
}
interface PayButtonParams {
    text: string;
}
interface LoginButtonParams {
    text: string;
    loginUrl: Interfaces.TelegramLoginUrl;
}
export declare class InlineKeyboardBuilder {
    private rows;
    private currentRow;
    get [Symbol.toStringTag](): string;
    /** Generate text button */
    textButton(params: TextButtonParams): this;
    /** Generate URL button */
    urlButton(params: UrlButtonParams): this;
    /** Generate Web App button */
    webAppButton(params: WebAppButtonParams): this;
    /** Generate button that will switch to current chat and type the query */
    switchToCurrentChatButton(params: SwitchToCurrentChatButtonParams): this;
    /** Generate button that will prompt user to select one of their chats */
    switchToChatButton(params: SwitchToChatButtonParams): this;
    /** Generate game button */
    gameButton(params: GameButtonParams): this;
    /** Generate pay button */
    payButton(params: PayButtonParams): this;
    /** Generate login button */
    loginButton(params: LoginButtonParams): this;
    /** Save current row of buttons in the general rows */
    row(): this;
    private addButton;
    private addWideButton;
    /** Clone current builder to new instance */
    clone(): InlineKeyboardBuilder;
    /** Returns JSON which is compatible with Telegram's `InlineKeyboardMarkup` interface */
    toJSON(): Interfaces.TelegramInlineKeyboardMarkup;
    toString(): string;
}
export {};
