"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Context = void 0;
const inspectable_1 = require("inspectable");
const constants_1 = require("../utils/constants");
class Context {
    constructor(options) {
        this.telegram = options.telegram;
        this.updateType = options.updateType;
        this.updateId = options.updateId;
        this.update = options.update;
    }
    get [Symbol.toStringTag]() {
        return this.constructor.name;
    }
    is(rawTypes) {
        const types = Array.isArray(rawTypes)
            ? rawTypes
            : [rawTypes];
        // TODO: it is interfering, make 'subTypes' logic maybe?
        if (types.includes('service_message')) {
            types.push(...constants_1.SERVICE_MESSAGE_EVENTS);
        }
        return types.includes(this.updateType);
    }
}
exports.Context = Context;
(0, inspectable_1.inspectable)(Context, {
    serialize(context) {
        return {};
    }
});
