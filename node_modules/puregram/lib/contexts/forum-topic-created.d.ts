import { Message } from '../common/structures';
import * as Interfaces from '../generated/telegram-interfaces';
import { Telegram } from '../telegram';
import { Constructor, Require } from '../types/types';
import { Context } from './context';
import { CloneMixin, NodeMixin, SendMixin, TargetMixin } from './mixins';
interface ForumTopicCreatedContextOptions {
    telegram: Telegram;
    update: Interfaces.TelegramUpdate;
    payload: Interfaces.TelegramMessage;
    updateId: number;
}
/** This object represents a service message about a new forum topic created in the chat. */
declare class ForumTopicCreatedContext extends Context {
    payload: Interfaces.TelegramMessage;
    private event;
    constructor(options: ForumTopicCreatedContextOptions);
    /** Name of the topic */
    get name(): string;
    /** Color of the topic icon in RGB format */
    get iconColor(): number;
    /** Unique identifier of the custom emoji shown as the topic icon */
    get iconCustomEmojiId(): string | undefined;
    /** Checks whether the event has `iconCustomEmojiId` property */
    hasIconCustomEmojiId(): this is Require<this, 'iconCustomEmojiId'>;
}
interface ForumTopicCreatedContext extends Constructor<ForumTopicCreatedContext>, Message, TargetMixin, SendMixin, NodeMixin, CloneMixin<ForumTopicCreatedContext, ForumTopicCreatedContextOptions> {
}
export { ForumTopicCreatedContext };
