"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebAppDataContext = void 0;
const inspectable_1 = require("inspectable");
const helpers_1 = require("../utils/helpers");
const structures_1 = require("../common/structures");
const context_1 = require("./context");
const mixins_1 = require("./mixins");
class WebAppDataContext extends context_1.Context {
    constructor(options) {
        super({
            telegram: options.telegram,
            updateType: 'web_app_data',
            updateId: options.updateId,
            update: options.update
        });
        this.payload = options.payload;
    }
    /** The data. Be aware that a bad client can send arbitrary data in this field. */
    get data() {
        const webAppData = this.payload.web_app_data;
        return webAppData.data;
    }
    /**
     * Text of the `web_app` keyboard button, from which the Web App was opened.
     * Be aware that a bad client can send arbitrary data in this field.
     */
    get buttonText() {
        const webAppData = this.payload.web_app_data;
        return webAppData.button_text;
    }
}
exports.WebAppDataContext = WebAppDataContext;
(0, helpers_1.applyMixins)(WebAppDataContext, [structures_1.Message, mixins_1.TargetMixin, mixins_1.SendMixin, mixins_1.NodeMixin, mixins_1.CloneMixin]);
(0, inspectable_1.inspectable)(WebAppDataContext, {
    serialize(context) {
        return {
            id: context.id,
            from: context.from,
            senderId: context.senderId,
            createdAt: context.createdAt,
            chat: context.chat,
            chatId: context.chatId,
            chatType: context.chatType,
            data: context.data,
            buttonText: context.buttonText
        };
    }
});
