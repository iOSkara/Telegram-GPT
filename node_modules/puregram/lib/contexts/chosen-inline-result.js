"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChosenInlineResultContext = void 0;
const inspectable_1 = require("inspectable");
const structures_1 = require("../common/structures");
const helpers_1 = require("../utils/helpers");
const context_1 = require("./context");
const mixins_1 = require("./mixins");
/**
 * The result of an inline query that was chosen by
 * a user and sent to their chat partner
 */
class ChosenInlineResultContext extends context_1.Context {
    constructor(options) {
        super({
            telegram: options.telegram,
            updateType: 'chosen_inline_result',
            updateId: options.updateId,
            update: options.update
        });
        this.payload = options.payload;
    }
    /** Checks if the result has `location` property */
    hasLocation() {
        return this.location !== undefined;
    }
    /** Checks if the query has `inlineMessageId` property */
    hasInlineMessageId() {
        return this.inlineMessageId !== undefined;
    }
}
exports.ChosenInlineResultContext = ChosenInlineResultContext;
(0, helpers_1.applyMixins)(ChosenInlineResultContext, [structures_1.ChosenInlineResult, mixins_1.SendMixin, mixins_1.CloneMixin]);
(0, inspectable_1.inspectable)(ChosenInlineResultContext, {
    serialize(result) {
        const payload = {
            resultId: result.resultId,
            from: result.from,
            senderId: result.senderId,
            location: result.location,
            inlineMessageId: result.inlineMessageId,
            query: result.query
        };
        return (0, helpers_1.filterPayload)(payload);
    }
});
