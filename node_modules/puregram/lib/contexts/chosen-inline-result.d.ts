import * as Interfaces from '../generated/telegram-interfaces';
import { ChosenInlineResult } from '../common/structures';
import { Telegram } from '../telegram';
import { Constructor, Require } from '../types/types';
import { Context } from './context';
import { SendMixin, CloneMixin } from './mixins';
interface ChosenInlineResultContextOptions {
    telegram: Telegram;
    update: Interfaces.TelegramUpdate;
    payload: Interfaces.TelegramChosenInlineResult;
    updateId: number;
}
/**
 * The result of an inline query that was chosen by
 * a user and sent to their chat partner
 */
declare class ChosenInlineResultContext extends Context {
    payload: Interfaces.TelegramChosenInlineResult;
    constructor(options: ChosenInlineResultContextOptions);
    /** Checks if the result has `location` property */
    hasLocation(): this is Require<this, 'location'>;
    /** Checks if the query has `inlineMessageId` property */
    hasInlineMessageId(): this is Require<this, 'inlineMessageId'>;
}
interface ChosenInlineResultContext extends Constructor<ChosenInlineResultContext>, ChosenInlineResult, SendMixin, CloneMixin<ChosenInlineResultContext, ChosenInlineResultContextOptions> {
}
export { ChosenInlineResultContext };
